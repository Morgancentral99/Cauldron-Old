--- ../src-base/minecraft/net/minecraft/world/gen/feature/WorldGenTrees.java
+++ ../src-work/minecraft/net/minecraft/world/gen/feature/WorldGenTrees.java
@@ -9,7 +9,9 @@
 import net.minecraft.world.World;
 import net.minecraftforge.common.util.ForgeDirection;
 
-public class WorldGenTrees extends WorldGenAbstractTree
+import org.bukkit.craftbukkit.CraftBlockChangeDelegate; // CraftBukkit
+
+public class WorldGenTrees extends WorldGenAbstractTree implements BlockSapling.TreeGenerator   // CraftBukkit - add interface
 {
     // JAVADOC FIELD $$ field_76533_a
     private final int minTreeHeight;
@@ -37,6 +39,13 @@
 
     public boolean generate(World par1World, Random par2Random, int par3, int par4, int par5)
     {
+        // CraftBukkit start - Moved to generate
+        return this.generate(new CraftBlockChangeDelegate((org.bukkit.BlockChangeDelegate) par1World), par2Random, par3, par4, par5);
+    }
+
+    public boolean generate(CraftBlockChangeDelegate par1World, Random par2Random, int par3, int par4, int par5)
+    {
+        // CraftBukkit end
         int l = par2Random.nextInt(3) + this.minTreeHeight;
         boolean flag = true;
 
@@ -66,7 +75,7 @@
                     {
                         if (i1 >= 0 && i1 < 256)
                         {
-                            block = par1World.func_147439_a(j1, i1, k1);
+                            block = par1World.getType(j1, i1, k1);
 
                             if (!this.isReplaceable(par1World, j1, i1, k1))
                             {
@@ -87,7 +96,7 @@
             }
             else
             {
-                Block block2 = par1World.func_147439_a(par3, par4 - 1, par5);
+                Block block2 = par1World.getType(par3, par4 - 1, par5);
 
                 boolean isSoil = block2.canSustainPlant(par1World, par3, par4 - 1, par5, ForgeDirection.UP, (BlockSapling)Blocks.sapling);
                 if (isSoil && par4 < 256 - l - 1)
@@ -115,11 +124,11 @@
 
                                 if (Math.abs(j2) != l1 || Math.abs(l2) != l1 || par2Random.nextInt(2) != 0 && i3 != 0)
                                 {
-                                    Block block1 = par1World.func_147439_a(i2, k1, k2);
+                                    Block block1 = par1World.getType(i2, k1, k2);
 
                                     if (block1.isAir(par1World, i2, k1, k2) || block1.isLeaves(par1World, i2, k1, k2))
                                     {
-                                        this.func_150516_a(par1World, i2, k1, k2, Blocks.leaves, this.metaLeaves);
+                                        this.setTypeAndData(par1World, i2, k1, k2, Blocks.leaves, this.metaLeaves);
                                     }
                                 }
                             }
@@ -128,32 +137,32 @@
 
                     for (k1 = 0; k1 < l; ++k1)
                     {
-                        block = par1World.func_147439_a(par3, par4 + k1, par5);
+                        block = par1World.getType(par3, par4 + k1, par5);
 
                         if (block.isAir(par1World, par3, par4 + k1, par5) || block.isLeaves(par1World, par3, par4 + k1, par5))
                         {
-                            this.func_150516_a(par1World, par3, par4 + k1, par5, Blocks.log, this.metaWood);
+                            this.setTypeAndData(par1World, par3, par4 + k1, par5, Blocks.log, this.metaWood);
 
                             if (this.vinesGrow && k1 > 0)
                             {
-                                if (par2Random.nextInt(3) > 0 && par1World.func_147437_c(par3 - 1, par4 + k1, par5))
+                                if (par2Random.nextInt(3) > 0 && par1World.isEmpty(par3 - 1, par4 + k1, par5))
                                 {
-                                    this.func_150516_a(par1World, par3 - 1, par4 + k1, par5, Blocks.vine, 8);
+                                    this.setTypeAndData(par1World, par3 - 1, par4 + k1, par5, Blocks.vine, 8);
                                 }
 
-                                if (par2Random.nextInt(3) > 0 && par1World.func_147437_c(par3 + 1, par4 + k1, par5))
+                                if (par2Random.nextInt(3) > 0 && par1World.isEmpty(par3 + 1, par4 + k1, par5))
                                 {
-                                    this.func_150516_a(par1World, par3 + 1, par4 + k1, par5, Blocks.vine, 2);
+                                    this.setTypeAndData(par1World, par3 + 1, par4 + k1, par5, Blocks.vine, 2);
                                 }
 
-                                if (par2Random.nextInt(3) > 0 && par1World.func_147437_c(par3, par4 + k1, par5 - 1))
+                                if (par2Random.nextInt(3) > 0 && par1World.isEmpty(par3, par4 + k1, par5 - 1))
                                 {
-                                    this.func_150516_a(par1World, par3, par4 + k1, par5 - 1, Blocks.vine, 1);
+                                    this.setTypeAndData(par1World, par3, par4 + k1, par5 - 1, Blocks.vine, 1);
                                 }
 
-                                if (par2Random.nextInt(3) > 0 && par1World.func_147437_c(par3, par4 + k1, par5 + 1))
+                                if (par2Random.nextInt(3) > 0 && par1World.isEmpty(par3, par4 + k1, par5 + 1))
                                 {
-                                    this.func_150516_a(par1World, par3, par4 + k1, par5 + 1, Blocks.vine, 4);
+                                    this.setTypeAndData(par1World, par3, par4 + k1, par5 + 1, Blocks.vine, 4);
                                 }
                             }
                         }
@@ -170,24 +179,24 @@
                             {
                                 for (j2 = par5 - l1; j2 <= par5 + l1; ++j2)
                                 {
-                                    if (par1World.func_147439_a(i2, k1, j2).isLeaves(par1World, i2, k1, j2))
+                                    if (par1World.getType(i2, k1, j2).isLeaves(par1World, i2, k1, j2))
                                     {
-                                        if (par2Random.nextInt(4) == 0 && par1World.func_147439_a(i2 - 1, k1, j2).isAir(par1World, i2 - 1, k1, j2))
+                                        if (par2Random.nextInt(4) == 0 && par1World.getType(i2 - 1, k1, j2).isAir(par1World, i2 - 1, k1, j2))
                                         {
                                             this.growVines(par1World, i2 - 1, k1, j2, 8);
                                         }
 
-                                        if (par2Random.nextInt(4) == 0 && par1World.func_147439_a(i2 + 1, k1, j2).isAir(par1World, i2 + 1, k1, j2))
+                                        if (par2Random.nextInt(4) == 0 && par1World.getType(i2 + 1, k1, j2).isAir(par1World, i2 + 1, k1, j2))
                                         {
                                             this.growVines(par1World, i2 + 1, k1, j2, 2);
                                         }
 
-                                        if (par2Random.nextInt(4) == 0 && par1World.func_147439_a(i2, k1, j2 - 1).isAir(par1World, i2, k1, j2 - 1))
+                                        if (par2Random.nextInt(4) == 0 && par1World.getType(i2, k1, j2 - 1).isAir(par1World, i2, k1, j2 - 1))
                                         {
                                             this.growVines(par1World, i2, k1, j2 - 1, 1);
                                         }
 
-                                        if (par2Random.nextInt(4) == 0 && par1World.func_147439_a(i2, k1, j2 + 1).isAir(par1World, i2, k1, j2 + 1))
+                                        if (par2Random.nextInt(4) == 0 && par1World.getType(i2, k1, j2 + 1).isAir(par1World, i2, k1, j2 + 1))
                                         {
                                             this.growVines(par1World, i2, k1, j2 + 1, 4);
                                         }
@@ -205,7 +214,7 @@
                                     if (par2Random.nextInt(4 - k1) == 0)
                                     {
                                         l1 = par2Random.nextInt(3);
-                                        this.func_150516_a(par1World, par3 + Direction.offsetX[Direction.rotateOpposite[i3]], par4 + l - 5 + k1, par5 + Direction.offsetZ[Direction.rotateOpposite[i3]], Blocks.cocoa, l1 << 2 | i3);
+                                        this.setTypeAndData(par1World, par3 + Direction.offsetX[Direction.rotateOpposite[i3]], par4 + l - 5 + k1, par5 + Direction.offsetZ[Direction.rotateOpposite[i3]], Blocks.cocoa, l1 << 2 | i3);
                                     }
                                 }
                             }
@@ -227,21 +236,22 @@
     }
 
     // JAVADOC METHOD $$ func_76529_b
-    private void growVines(World par1World, int par2, int par3, int par4, int par5)
+    // CraftBukkit - Changed world to BlockChangeDelegate
+    private void growVines(CraftBlockChangeDelegate par1World, int par2, int par3, int par4, int par5)
     {
-        this.func_150516_a(par1World, par2, par3, par4, Blocks.vine, par5);
+        this.setTypeAndData(par1World, par2, par3, par4, Blocks.vine, par5);
         int i1 = 4;
 
         while (true)
         {
             --par3;
 
-            if (par1World.func_147439_a(par2, par3, par4).isAir(par1World, par2, par3, par4) || i1 <= 0)
+            if (par1World.getType(par2, par3, par4).isAir(par1World, par2, par3, par4) || i1 <= 0)
             {
                 return;
             }
 
-            this.func_150516_a(par1World, par2, par3, par4, Blocks.vine, par5);
+            this.setTypeAndData(par1World, par2, par3, par4, Blocks.vine, par5);
             --i1;
         }
     }
