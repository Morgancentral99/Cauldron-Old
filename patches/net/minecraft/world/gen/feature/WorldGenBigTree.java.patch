--- ../src-base/minecraft/net/minecraft/world/gen/feature/WorldGenBigTree.java
+++ ../src-work/minecraft/net/minecraft/world/gen/feature/WorldGenBigTree.java
@@ -9,14 +9,17 @@
 import net.minecraft.world.World;
 import net.minecraftforge.common.util.ForgeDirection;
 
-public class WorldGenBigTree extends WorldGenAbstractTree
+import org.bukkit.craftbukkit.CraftBlockChangeDelegate; // CraftBukkit
+
+public class WorldGenBigTree extends WorldGenAbstractTree implements BlockSapling.TreeGenerator   // CraftBukkit - add interface
 {
     // JAVADOC FIELD $$ field_76507_a
     static final byte[] otherCoordPairs = new byte[] {(byte)2, (byte)0, (byte)0, (byte)1, (byte)2, (byte)1};
     // JAVADOC FIELD $$ field_76505_b
     Random rand = new Random();
     // JAVADOC FIELD $$ field_76506_c
-    World worldObj;
+    /** Reference to the World object. */
+    CraftBlockChangeDelegate worldObj; // CraftBukkit - Change type
     int[] basePos = new int[] {0, 0, 0};
     int heightLimit;
     int height;
@@ -150,7 +153,7 @@
                 else
                 {
                     aint1[b2] = aint[b2] + j1;
-                    Block block1 = this.worldObj.func_147439_a(aint1[0], aint1[1], aint1[2]);
+                    Block block1 = this.worldObj.getType(aint1[0], aint1[1], aint1[2]);
 
                     if (!block1.isAir(worldObj, aint1[0], aint1[1], aint1[2]) && !block1.isLeaves(worldObj, aint1[0], aint1[1], aint1[2]))
                     {
@@ -158,7 +161,7 @@
                     }
                     else
                     {
-                        this.func_150516_a(this.worldObj, aint1[0], aint1[1], aint1[2], p_150529_6_, 0);
+                        this.setTypeAndData(this.worldObj, aint1[0], aint1[1], aint1[2], p_150529_6_, 0);
                         ++j1;
                     }
                 }
@@ -272,7 +275,7 @@
                     }
                 }
 
-                this.func_150516_a(this.worldObj, aint3[0], aint3[1], aint3[2], p_150530_3_, b5);
+                this.setTypeAndData(this.worldObj, aint3[0], aint3[1], aint3[2], p_150530_3_, b5);
             }
         }
     }
@@ -389,9 +392,9 @@
                 aint3[b1] = par1ArrayOfInteger[b1] + i;
                 aint3[b2] = MathHelper.floor_double((double)par1ArrayOfInteger[b2] + (double)i * d0);
                 aint3[b3] = MathHelper.floor_double((double)par1ArrayOfInteger[b3] + (double)i * d1);
-                Block block = this.worldObj.func_147439_a(aint3[0], aint3[1], aint3[2]);
+                Block block = this.worldObj.getType(aint3[0], aint3[1], aint3[2]);
 
-                if (!this.isReplaceable(worldObj, aint3[0], aint3[1], aint3[2]))
+                if (!this.func_150523_a(block) || par1ArrayOfInteger[1] >= 256)   // CraftBukkit - fix trees wrapping around
                 {
                     break;
                 }
@@ -406,7 +409,7 @@
     {
         int[] aint = new int[] {this.basePos[0], this.basePos[1], this.basePos[2]};
         int[] aint1 = new int[] {this.basePos[0], this.basePos[1] + this.heightLimit - 1, this.basePos[2]};
-        Block block = this.worldObj.func_147439_a(this.basePos[0], this.basePos[1] - 1, this.basePos[2]);
+        Block block = this.worldObj.getType(this.basePos[0], this.basePos[1] - 1, this.basePos[2]);
 
         boolean isSoil = block.canSustainPlant(worldObj, basePos[0], basePos[1] - 1, basePos[2], ForgeDirection.UP, (BlockSapling)Blocks.sapling);
         if (!isSoil)
@@ -449,6 +452,17 @@
 
     public boolean generate(World par1World, Random par2Random, int par3, int par4, int par5)
     {
+        // CraftBukkit start - Moved to generate
+        // sk: The idea is to have (our) WorldServer implement
+        // BlockChangeDelegate and then we can implicitly cast World to
+        // WorldServer (a safe cast, AFAIK) and no code will be broken. This
+        // then allows plugins to catch manually-invoked generation events
+        return this.generate(new CraftBlockChangeDelegate((org.bukkit.BlockChangeDelegate) par1World), par2Random, par3, par4, par5);
+    }
+
+    public boolean generate(CraftBlockChangeDelegate par1World, Random par2Random, int par3, int par4, int par5)
+    {
+        // CraftBukkit end
         this.worldObj = par1World;
         long l = par2Random.nextLong();
         this.rand.setSeed(l);
