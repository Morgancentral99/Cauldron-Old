--- ../src-base/minecraft/net/minecraft/world/chunk/storage/AnvilChunkLoader.java
+++ ../src-work/minecraft/net/minecraft/world/chunk/storage/AnvilChunkLoader.java
@@ -80,6 +80,7 @@
             Chunk chunk = (Chunk) data[0];
             NBTTagCompound nbttagcompound = (NBTTagCompound) data[1];
             this.loadEntities(p_75815_1_, nbttagcompound.getCompoundTag("Level"), chunk);
+            MinecraftForge.EVENT_BUS.post(new ChunkDataEvent.Load(chunk, nbttagcompound)); // Cauldron - Don't call ChunkDataEvent.Load async
             return chunk;
         }
 
@@ -156,8 +157,8 @@
             if (!chunk.isAtLocation(p_75822_2_, p_75822_3_))
             {
                 logger.error("Chunk file at " + p_75822_2_ + "," + p_75822_3_ + " is in the wrong location; relocating. (Expected " + p_75822_2_ + ", " + p_75822_3_ + ", got " + chunk.xPosition + ", " + chunk.zPosition + ")");
-                p_75822_4_.setInteger("xPos", p_75822_2_);
-                p_75822_4_.setInteger("zPos", p_75822_3_);
+                p_75822_4_.getCompoundTag("Level").setInteger("xPos", p_75822_2_); // CraftBukkit - .getCompound("Level")
+                p_75822_4_.getCompoundTag("Level").setInteger("zPos", p_75822_3_); // CraftBukkit - .getCompound("Level")
                 // Have to move tile entities since we don't load them at this stage
                 NBTTagList tileEntities = p_75822_4_.getCompoundTag("Level").getTagList("TileEntities", 10);
 
@@ -187,8 +188,18 @@
 
     public void saveChunk(World p_75816_1_, Chunk p_75816_2_) throws MinecraftException, IOException
     {
-        p_75816_1_.checkSessionLock();
+        // CraftBukkit start - "handle" exception
+        try
+        {
+            p_75816_1_.checkSessionLock();
+        }
+        catch (MinecraftException ex)
+        {
+            ex.printStackTrace();
+        }
 
+        // CraftBukkit end
+
         try
         {
             NBTTagCompound nbttagcompound = new NBTTagCompound();
@@ -230,7 +241,7 @@
 
     public boolean writeNextIO()
     {
-        AnvilChunkLoader.PendingChunk pendingchunk = null;
+        PendingChunk pendingchunktosave = null;
         Object object = this.syncLockObject;
 
         synchronized (this.syncLockObject)
@@ -240,15 +251,15 @@
                 return false;
             }
 
-            pendingchunk = (AnvilChunkLoader.PendingChunk)this.chunksToRemove.remove(0);
-            this.pendingAnvilChunksCoordinates.remove(pendingchunk.chunkCoordinate);
+            pendingchunktosave = (PendingChunk) this.chunksToRemove.remove(0);
+            this.pendingAnvilChunksCoordinates.remove(pendingchunktosave.chunkCoordinate);
         }
 
-        if (pendingchunk != null)
+        if (pendingchunktosave != null)
         {
             try
             {
-                this.writeChunkNBTTags(pendingchunk);
+                this.writeChunkNBTTags(pendingchunktosave);
             }
             catch (Exception exception)
             {
@@ -259,7 +270,7 @@
         return true;
     }
 
-    private void writeChunkNBTTags(AnvilChunkLoader.PendingChunk p_75821_1_) throws IOException
+    public void writeChunkNBTTags(AnvilChunkLoader.PendingChunk p_75821_1_) throws java.io.IOException   // CraftBukkit - public -> private, added throws
     {
         DataOutputStream dataoutputstream = RegionFileCache.getChunkOutputStream(this.chunkSaveLocation, p_75821_1_.chunkCoordinate.chunkXPos, p_75821_1_.chunkCoordinate.chunkZPos);
         CompressedStreamTools.write(p_75821_1_.nbtTags, dataoutputstream);
@@ -307,19 +318,19 @@
 
                 if (extendedblockstorage.getBlockMSBArray() != null)
                 {
-                    nbttagcompound1.setByteArray("Add", extendedblockstorage.getBlockMSBArray().data);
+                    nbttagcompound1.setByteArray("Add", extendedblockstorage.getBlockMSBArray().getValueArray()); // Spigot
                 }
 
-                nbttagcompound1.setByteArray("Data", extendedblockstorage.getMetadataArray().data);
-                nbttagcompound1.setByteArray("BlockLight", extendedblockstorage.getBlocklightArray().data);
+                nbttagcompound1.setByteArray("Data", extendedblockstorage.getMetadataArray().getValueArray()); // Spigot
+                nbttagcompound1.setByteArray("BlockLight", extendedblockstorage.getBlocklightArray().getValueArray()); // Spigot
 
                 if (flag)
                 {
-                    nbttagcompound1.setByteArray("SkyLight", extendedblockstorage.getSkylightArray().data);
+                    nbttagcompound1.setByteArray("SkyLight", extendedblockstorage.getSkylightArray().getValueArray()); // Spigot
                 }
                 else
                 {
-                    nbttagcompound1.setByteArray("SkyLight", new byte[extendedblockstorage.getBlocklightArray().data.length]);
+                    nbttagcompound1.setByteArray("SkyLight", new byte[extendedblockstorage.getBlocklightArray().getValueArray().length]); // Spigot
                 }
 
                 nbttaglist.appendTag(nbttagcompound1);
@@ -468,20 +479,25 @@
                 if (entity2 != null)
                 {
                     chunk.addEntity(entity2);
-                    Entity entity = entity2;
-
-                    for (NBTTagCompound nbttagcompound2 = nbttagcompound3; nbttagcompound2.hasKey("Riding", 10); nbttagcompound2 = nbttagcompound2.getCompoundTag("Riding"))
+                    // Cauldron start - check to see if we killed entity due to invalid location
+                    if (!entity2.isDead)
                     {
-                        Entity entity1 = EntityList.createEntityFromNBT(nbttagcompound2.getCompoundTag("Riding"), p_75823_1_);
+                        Entity entity = entity2;
 
-                        if (entity1 != null)
+                        for (NBTTagCompound nbttagcompound2 = nbttagcompound3; nbttagcompound2.hasKey("Riding", 10); nbttagcompound2 = nbttagcompound2.getCompoundTag("Riding"))
                         {
-                            chunk.addEntity(entity1);
-                            entity.mountEntity(entity1);
-                        }
+                            Entity entity1 = EntityList.createEntityFromNBT(nbttagcompound2.getCompoundTag("Riding"), p_75823_1_);
 
-                        entity = entity1;
+                            if (entity1 != null)
+                            {
+                                chunk.addEntity(entity1);
+                                entity.mountEntity(entity1);
+                            }
+
+                            entity = entity1;
+                        }
                     }
+                    // Cauldron end
                 }
             }
         }
