--- ../src-base/minecraft/net/minecraft/item/crafting/CraftingManager.java
+++ ../src-work/minecraft/net/minecraft/item/crafting/CraftingManager.java
@@ -13,12 +13,19 @@
 import net.minecraft.item.ItemStack;
 import net.minecraft.world.World;
 
+import org.bukkit.craftbukkit.event.CraftEventFactory; // CraftBukkit
+
 public class CraftingManager
 {
     // JAVADOC FIELD $$ field_77598_a
     private static final CraftingManager instance = new CraftingManager();
     // JAVADOC FIELD $$ field_77597_b
-    private List recipes = new ArrayList();
+    // CraftBukkit start
+    /** A list of all the recipes added */
+    public List recipes = new ArrayList(); // private -> public
+    public IRecipe lastRecipe;
+    public org.bukkit.inventory.InventoryView lastCraftView;
+    // CraftBukkit end
     private static final String __OBFID = "CL_00000090";
 
     // JAVADOC METHOD $$ func_77594_a
@@ -28,7 +35,8 @@
         return instance;
     }
 
-    private CraftingManager()
+    // CraftBukkit - private -> public
+    public CraftingManager()
     {
         (new RecipesTools()).addRecipes(this);
         (new RecipesWeapons()).addRecipes(this);
@@ -156,6 +164,23 @@
         this.addShapelessRecipe(new ItemStack(Items.fire_charge, 3), new Object[] {Items.gunpowder, Items.blaze_powder, new ItemStack(Items.coal, 1, 1)});
         this.addRecipe(new ItemStack(Blocks.daylight_detector), new Object[] {"GGG", "QQQ", "WWW", 'G', Blocks.glass, 'Q', Items.quartz, 'W', Blocks.wooden_slab});
         this.addRecipe(new ItemStack(Blocks.hopper), new Object[] {"I I", "ICI", " I ", 'I', Items.iron_ingot, 'C', Blocks.chest});
+        /*Collections.sort(this.recipes, new Comparator() // CraftBukkit - moved below
+        {
+            private static final String __OBFID = "CL_00000091";
+            public int compare(IRecipe par1IRecipe, IRecipe par2IRecipe)
+            {
+                return par1IRecipe instanceof ShapelessRecipes && par2IRecipe instanceof ShapedRecipes ? 1 : (par2IRecipe instanceof ShapelessRecipes && par1IRecipe instanceof ShapedRecipes ? -1 : (par2IRecipe.getRecipeSize() < par1IRecipe.getRecipeSize() ? -1 : (par2IRecipe.getRecipeSize() > par1IRecipe.getRecipeSize() ? 1 : 0)));
+            }
+            public int compare(Object par1Obj, Object par2Obj)
+            {
+                return this.compare((IRecipe)par1Obj, (IRecipe)par2Obj);
+            }
+        });*/
+         this.sort(); // CraftBukkit - call new sort method
+    }
+
+    public void sort()
+    {
         Collections.sort(this.recipes, new Comparator()
         {
             private static final String __OBFID = "CL_00000091";
@@ -316,7 +341,16 @@
                 i1 = 0;
             }
 
-            return new ItemStack(itemstack.getItem(), 1, i1);
+            // CraftBukkit start - Construct a dummy repair recipe
+            ItemStack result = new ItemStack(itemstack.getItem(), k, i1);
+            List<ItemStack> ingredients = new ArrayList<ItemStack>();
+            ingredients.add(itemstack.copy());
+            ingredients.add(itemstack1.copy());
+            ShapelessRecipes recipe = new ShapelessRecipes(result.copy(), ingredients);
+            par1InventoryCrafting.currentRecipe = recipe;
+            result = CraftEventFactory.callPreCraftEvent(par1InventoryCrafting, result, lastCraftView, true);
+            return result;
+            // CraftBukkit end
         }
         else
         {
@@ -326,10 +360,15 @@
 
                 if (irecipe.matches(par1InventoryCrafting, par2World))
                 {
-                    return irecipe.getCraftingResult(par1InventoryCrafting);
+                    // CraftBukkit start - INVENTORY_PRE_CRAFT event
+                    par1InventoryCrafting.currentRecipe = irecipe;
+                    ItemStack result = irecipe.getCraftingResult(par1InventoryCrafting);
+                    return CraftEventFactory.callPreCraftEvent(par1InventoryCrafting, result, lastCraftView, false);
+                    // CraftBukkit end
                 }
             }
 
+            par1InventoryCrafting.currentRecipe = null; // CraftBukkit - Clear recipe when no recipe is found
             return null;
         }
     }
