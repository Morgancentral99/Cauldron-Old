--- ../src-base/minecraft/net/minecraft/item/ItemTool.java
+++ ../src-work/minecraft/net/minecraft/item/ItemTool.java
@@ -1,6 +1,5 @@
 package net.minecraft.item;
 
-import com.google.common.collect.ImmutableSet;
 import com.google.common.collect.Multimap;
 import cpw.mods.fml.relauncher.Side;
 import cpw.mods.fml.relauncher.SideOnly;
@@ -32,18 +31,6 @@
         this.efficiencyOnProperMaterial = p_i45333_2_.getEfficiencyOnProperMaterial();
         this.damageVsEntity = p_i45333_1_ + p_i45333_2_.getDamageVsEntity();
         this.setCreativeTab(CreativeTabs.tabTools);
-        if (this instanceof ItemPickaxe)
-        {
-            toolClass = "pickaxe";
-        }
-        else if (this instanceof ItemAxe)
-        {
-            toolClass = "axe";
-        }
-        else if (this instanceof ItemSpade)
-        {
-            toolClass = "shovel";
-        }
     }
 
     public float func_150893_a(ItemStack p_150893_1_, Block p_150893_2_)
@@ -107,30 +94,27 @@
     }
 
     /*===================================== FORGE START =================================*/
-    private String toolClass;
     @Override
     public int getHarvestLevel(ItemStack stack, String toolClass)
     {
-        int level = super.getHarvestLevel(stack, toolClass);
-        if (level == -1 && toolClass != null && toolClass.equals(this.toolClass))
+        if ("pickaxe".equals(toolClass) && this instanceof ItemPickaxe)
         {
             return this.toolMaterial.getHarvestLevel();
         }
-        else
+        else if ("axe".equals(toolClass) && this instanceof ItemAxe)
         {
-            return level;
+            return this.toolMaterial.getHarvestLevel();
         }
+        else if ("shovel".equals(toolClass) && this instanceof ItemSpade)
+        {
+            return this.toolMaterial.getHarvestLevel();
+        }
+        return super.getHarvestLevel(stack, toolClass);
     }
 
     @Override
-    public Set<String> getToolClasses(ItemStack stack)
+    public float getDigSpeed(ItemStack stack, Block block, int meta) 
     {
-        return toolClass != null ? ImmutableSet.of(toolClass) : super.getToolClasses(stack);
-    }
-
-    @Override
-    public float getDigSpeed(ItemStack stack, Block block, int meta)
-    {
         if (ForgeHooks.isToolEffective(stack, block, meta))
         {
             return efficiencyOnProperMaterial;
